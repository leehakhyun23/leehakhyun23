package JDBC01;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;

public class JDBC_Insert {

   public static void main(String[] args) {
      
      Connection con = null;
      String url = "jdbc:oracle:thin:@localhost:1521:xe";
      String driver = "oracle.jdbc.driver.OracleDriver";
      String id = "scott";
      String pw = "tiger";
      PreparedStatement pstmt = null;
      
      // ResultSet은 결과값을 자바로 불러올 때 즉, 조회할 때 필요하기 때문에 insert 삽입문에서는 필요가 없다.
            
      try {
         Class.forName(driver);
         con = DriverManager.getConnection(url, id, pw);
         
         Scanner scanner = new Scanner(System.in);
         
         System.out.print("번호를 입력하세요 : ");
         // int num = Integer.parseInt(scanner.nextLine());
         int num = scanner.nextInt();
         
         System.out.print("이름을 입력하세요 : ");
         String name = scanner.next();
         
         System.out.print("이메일을 입력하세요 : ");
         String email = scanner.next();
         
         System.out.print("전화번호를 입력하세요 : ");
         String phone = scanner.next();
         
         // String sql =  "insert into customer(num, name, email, tel) values(6, '김하나', 'abc6@abc.com', '010-4444-5555')";
         // String sql = "insert into customer(num, name, email, phone) values( " + num + ", " + name + ", " + email + ", " + phone + ")";
         String sql = "insert into customer(num, name, email, tel) values(?, ?, ?, ?)";
         pstmt = con.prepareStatement(sql);
         
         // 변수들이 물음표 순서에 맞게 매칭되어 구성됩니다.
         pstmt.setInt(1, num);
         pstmt.setString(2, name);
         pstmt.setString(3, email);
         pstmt.setString(4, phone);
         
         //setInt 와 setString 이 자동으로 필요한 따옴표(' ') 를 붙여서 sql 명령을 구성하여 줍니다.
         
         int result = pstmt.executeUpdate();
         
         if(result == 1) System.out.println("레코드 추가 성공!!");
         else System.out.println("레코드 추가 실패");

      } catch (ClassNotFoundException e) {
               e.printStackTrace();
      } catch (SQLException e) {
               e.printStackTrace();
      }
      try {
             if(con != null)   con.close();
             if(pstmt != null) pstmt.close();
                  
      } catch (SQLException e) {
                  e.printStackTrace();
      }
   }

}